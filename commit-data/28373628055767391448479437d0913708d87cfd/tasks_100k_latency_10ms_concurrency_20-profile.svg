<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="693"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="693"> </text>
<g id="frames">
<g>
<title>all (269 samples, 100.00%)</title><rect x="10.0" y="659.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="670.0">all</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.37%)</title><rect x="10.0" y="643.0" width="4.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.run (20 samples, 7.43%)</title><rect x="14.4" y="643.0" width="87.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.4" y="654.0">com/lineco..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.consumeLoop (20 samples, 7.43%)</title><rect x="14.4" y="627.0" width="87.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.4" y="638.0">com/lineco..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager.poll (20 samples, 7.43%)</title><rect x="14.4" y="611.0" width="87.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.4" y="622.0">com/lineco..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager.resumePartitions (1 samples, 0.37%)</title><rect x="14.4" y="595.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.4" y="606.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.partitionsNeedsResume (1 samples, 0.37%)</title><rect x="14.4" y="579.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5 samples, 1.86%)</title><rect x="18.8" y="595.0" width="21.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.8" y="606.0">j..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager$$Lambda$269/2140476004.accept (5 samples, 1.86%)</title><rect x="18.8" y="579.0" width="21.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.8" y="590.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$Handler.receive (5 samples, 1.86%)</title><rect x="18.8" y="563.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.8" y="574.0">c..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContext.addRequest (3 samples, 1.12%)</title><rect x="27.5" y="547.0" width="13.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.5" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionProcessor.addTask (3 samples, 1.12%)</title><rect x="27.5" y="531.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.5" y="542.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.putTask (3 samples, 1.12%)</title><rect x="27.5" y="515.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (3 samples, 1.12%)</title><rect x="27.5" y="499.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 1.12%)</title><rect x="27.5" y="483.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 1.12%)</title><rect x="27.5" y="467.0" width="13.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.5" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (14 samples, 5.20%)</title><rect x="40.7" y="595.0" width="61.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.7" y="606.0">org/ap..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (14 samples, 5.20%)</title><rect x="40.7" y="579.0" width="61.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.7" y="590.0">org/ap..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollForFetches (11 samples, 4.09%)</title><rect x="40.7" y="563.0" width="48.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.7" y="574.0">org/..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (6 samples, 2.23%)</title><rect x="40.7" y="547.0" width="26.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.7" y="558.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (6 samples, 2.23%)</title><rect x="40.7" y="531.0" width="26.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.7" y="542.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (4 samples, 1.49%)</title><rect x="40.7" y="515.0" width="17.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.7" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.handleCompletedReceives (1 samples, 0.37%)</title><rect x="40.7" y="499.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.7" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.parseStructMaybeUpdateThrottleTimeMetrics (1 samples, 0.37%)</title><rect x="40.7" y="483.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.7" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/ResponseHeader.parse (1 samples, 0.37%)</title><rect x="40.7" y="467.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.7" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/message/ResponseHeaderData.&lt;init&gt; (1 samples, 0.37%)</title><rect x="40.7" y="451.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.7" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/common/message/ResponseHeaderData.read (1 samples, 0.37%)</title><rect x="40.7" y="435.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.7" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/common/protocol/types/Schema.get (1 samples, 0.37%)</title><rect x="40.7" y="419.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.7" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (3 samples, 1.12%)</title><rect x="45.1" y="499.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.1" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.37%)</title><rect x="45.1" y="483.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.1" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.37%)</title><rect x="45.1" y="467.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.1" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.checkQuotas (1 samples, 0.37%)</title><rect x="45.1" y="451.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.1" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/MetricConfig.quota (1 samples, 0.37%)</title><rect x="45.1" y="435.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.1" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (1 samples, 0.37%)</title><rect x="49.5" y="483.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.5" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.write (1 samples, 0.37%)</title><rect x="49.5" y="467.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.5" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.send (1 samples, 0.37%)</title><rect x="49.5" y="451.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.5" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/ByteBufferSend.writeTo (1 samples, 0.37%)</title><rect x="49.5" y="435.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.5" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/PlaintextTransportLayer.write (1 samples, 0.37%)</title><rect x="49.5" y="419.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.5" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.37%)</title><rect x="49.5" y="403.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.37%)</title><rect x="49.5" y="387.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.5" y="398.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.select (1 samples, 0.37%)</title><rect x="53.9" y="483.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.9" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (1 samples, 0.37%)</title><rect x="53.9" y="467.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.37%)</title><rect x="53.9" y="451.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.37%)</title><rect x="53.9" y="435.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.9" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (1 samples, 0.37%)</title><rect x="53.9" y="419.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.9" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer$$Lambda$265/1078869299.shouldBlock (1 samples, 0.37%)</title><rect x="58.3" y="515.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.3" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.lambda$pollForFetches$1 (1 samples, 0.37%)</title><rect x="58.3" y="499.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.3" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.hasAvailableFetches (1 samples, 0.37%)</title><rect x="58.3" y="483.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.3" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.37%)</title><rect x="58.3" y="467.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.37%)</title><rect x="58.3" y="451.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.3" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.firePendingCompletedRequests (1 samples, 0.37%)</title><rect x="62.6" y="515.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.6" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient$RequestFutureCompletionHandler.fireCompletion (1 samples, 0.37%)</title><rect x="62.6" y="499.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.6" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/RequestFuture.complete (1 samples, 0.37%)</title><rect x="62.6" y="483.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.6" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/RequestFuture.fireSuccess (1 samples, 0.37%)</title><rect x="62.6" y="467.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.6" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchedRecords (5 samples, 1.86%)</title><rect x="67.0" y="547.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.0" y="558.0">o..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedQueue.peek (1 samples, 0.37%)</title><rect x="67.0" y="531.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.0" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.access$1300 (1 samples, 0.37%)</title><rect x="71.4" y="531.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.4" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchRecords (3 samples, 1.12%)</title><rect x="75.8" y="531.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.8" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.access$1700 (3 samples, 1.12%)</title><rect x="75.8" y="515.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.8" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.fetchRecords (3 samples, 1.12%)</title><rect x="75.8" y="499.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.8" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.nextFetchedRecord (3 samples, 1.12%)</title><rect x="75.8" y="483.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.8" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher$CompletedFetch.maybeEnsureValid (2 samples, 0.74%)</title><rect x="75.8" y="467.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.8" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.ensureValid (2 samples, 0.74%)</title><rect x="75.8" y="451.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.8" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.isValid (2 samples, 0.74%)</title><rect x="75.8" y="435.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.8" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch.computeChecksum (2 samples, 0.74%)</title><rect x="75.8" y="419.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.8" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Crc32C.compute (2 samples, 0.74%)</title><rect x="75.8" y="403.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.8" y="414.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/Checksums.update (2 samples, 0.74%)</title><rect x="75.8" y="387.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.8" y="398.0"></text>
</g>
<g>
<title>org/apache/kafka/common/utils/PureJavaCrc32C.update (2 samples, 0.74%)</title><rect x="75.8" y="371.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.8" y="382.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch$RecordIterator.next (1 samples, 0.37%)</title><rect x="84.6" y="467.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.6" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/record/DefaultRecordBatch$RecordIterator.next (1 samples, 0.37%)</title><rect x="84.6" y="451.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.6" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateAssignmentMetadataIfNeeded (2 samples, 0.74%)</title><rect x="89.0" y="563.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.0" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.updateFetchPositions (2 samples, 0.74%)</title><rect x="89.0" y="547.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.0" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.validateOffsetsIfNeeded (1 samples, 0.37%)</title><rect x="89.0" y="531.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.0" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.partitionsNeedingValidation (1 samples, 0.37%)</title><rect x="89.0" y="515.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.0" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.collectPartitions (1 samples, 0.37%)</title><rect x="89.0" y="499.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.0" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.hasAllFetchPositions (1 samples, 0.37%)</title><rect x="93.3" y="531.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.allMatch (1 samples, 0.37%)</title><rect x="93.3" y="515.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.37%)</title><rect x="93.3" y="499.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/MatchOps$MatchOp.evaluateSequential (1 samples, 0.37%)</title><rect x="93.3" y="483.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/MatchOps$MatchOp.evaluateSequential (1 samples, 0.37%)</title><rect x="93.3" y="467.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.37%)</title><rect x="93.3" y="451.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.3" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.37%)</title><rect x="93.3" y="435.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.37%)</title><rect x="93.3" y="419.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.3" y="430.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.37%)</title><rect x="93.3" y="403.0" width="4.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="96.3" y="414.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (1 samples, 0.37%)</title><rect x="97.7" y="563.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.7" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.prepareFetchRequests (1 samples, 0.37%)</title><rect x="97.7" y="547.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.7" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.assignedPartitions (1 samples, 0.37%)</title><rect x="97.7" y="531.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Thread.run (220 samples, 81.78%)</title><rect x="102.1" y="643.0" width="965.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.1" y="654.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (220 samples, 81.78%)</title><rect x="102.1" y="627.0" width="965.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.1" y="638.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (220 samples, 81.78%)</title><rect x="102.1" y="611.0" width="965.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.1" y="622.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit$$Lambda$289/1729160025.run (208 samples, 77.32%)</title><rect x="102.1" y="595.0" width="912.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.1" y="606.0">com/linecorp/decaton/processor/runtime/internal/ProcessorUnit$$Lambda$289/1729160025.run</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.lambda$putTask$62 (208 samples, 77.32%)</title><rect x="102.1" y="579.0" width="912.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.1" y="590.0">com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.lambda$putTask$62</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.processTask (208 samples, 77.32%)</title><rect x="102.1" y="563.0" width="912.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.1" y="574.0">com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.processTask</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.scheduleThenProcess (208 samples, 77.32%)</title><rect x="102.1" y="547.0" width="912.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.1" y="558.0">com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.scheduleThenProcess</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/CompletionImpl.completeWith (27 samples, 10.04%)</title><rect x="119.7" y="531.0" width="118.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.7" y="542.0">com/linecorp/d..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.process (1 samples, 0.37%)</title><rect x="185.5" y="515.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 4.09%)</title><rect x="189.9" y="515.0" width="48.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.9" y="526.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 4.09%)</title><rect x="189.9" y="499.0" width="48.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.9" y="510.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 4.09%)</title><rect x="189.9" y="483.0" width="48.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.9" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 4.09%)</title><rect x="189.9" y="467.0" width="48.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.9" y="478.0">java..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/CompletionImpl$$Lambda$307/1518726294.accept (11 samples, 4.09%)</title><rect x="189.9" y="451.0" width="48.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.9" y="462.0">com/..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/CompletionImpl.lambda$completeWith$20 (11 samples, 4.09%)</title><rect x="189.9" y="435.0" width="48.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.9" y="446.0">com/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (11 samples, 4.09%)</title><rect x="189.9" y="419.0" width="48.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.9" y="430.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 3.72%)</title><rect x="194.2" y="403.0" width="43.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.2" y="414.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 3.72%)</title><rect x="194.2" y="387.0" width="43.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.2" y="398.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 1.12%)</title><rect x="194.2" y="371.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.cleanStack (3 samples, 1.12%)</title><rect x="194.2" y="355.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.2" y="366.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$Handler$$Lambda$287/1704756326.accept (1 samples, 0.37%)</title><rect x="194.2" y="339.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.2" y="350.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/OutOfOrderCommitControl$$Lambda$286/184252434.accept (2 samples, 0.74%)</title><rect x="198.6" y="339.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 2.60%)</title><rect x="207.4" y="371.0" width="30.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.4" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 2.60%)</title><rect x="207.4" y="355.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.4" y="366.0">ja..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.extract (42 samples, 15.61%)</title><rect x="238.1" y="531.0" width="184.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.1" y="542.0">com/linecorp/decaton/pro..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$45/1556995360.extract (42 samples, 15.61%)</title><rect x="238.1" y="515.0" width="184.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.1" y="526.0">com/linecorp/decaton/ben..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$init$13 (42 samples, 15.61%)</title><rect x="238.1" y="499.0" width="184.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.1" y="510.0">com/linecorp/decaton/ben..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (42 samples, 15.61%)</title><rect x="238.1" y="483.0" width="184.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.1" y="494.0">com/linecorp/decaton/ben..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (42 samples, 15.61%)</title><rect x="238.1" y="467.0" width="184.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.1" y="478.0">com/linecorp/decaton/ben..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.readValue (42 samples, 15.61%)</title><rect x="238.1" y="451.0" width="184.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.1" y="462.0">com/fasterxml/jackson/da..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createParser (18 samples, 6.69%)</title><rect x="238.1" y="435.0" width="79.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.1" y="446.0">com/faste..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createContext (10 samples, 3.72%)</title><rect x="238.1" y="419.0" width="43.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.1" y="430.0">com/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.37%)</title><rect x="238.1" y="403.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="241.1" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.37%)</title><rect x="238.1" y="387.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="241.1" y="398.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="238.1" y="371.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="241.1" y="382.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.37%)</title><rect x="238.1" y="355.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="241.1" y="366.0"></text>
</g>
<g>
<title>G1OffsetTableContigSpace::free() const (1 samples, 0.37%)</title><rect x="238.1" y="339.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="241.1" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._getBufferRecycler (6 samples, 2.23%)</title><rect x="242.5" y="403.0" width="26.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.5" y="414.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecyclers.getBufferRecycler (2 samples, 0.74%)</title><rect x="260.0" y="387.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.0" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.74%)</title><rect x="260.0" y="371.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.0" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.74%)</title><rect x="260.0" y="355.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.0" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.74%)</title><rect x="260.0" y="339.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.0" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.74%)</title><rect x="260.0" y="323.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.0" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.&lt;init&gt; (3 samples, 1.12%)</title><rect x="268.8" y="403.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.8" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecyclers.getBufferRecycler (3 samples, 1.12%)</title><rect x="268.8" y="387.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.8" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createParser (8 samples, 2.97%)</title><rect x="282.0" y="419.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.0" y="430.0">com..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.37%)</title><rect x="282.0" y="403.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="285.0" y="414.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.37%)</title><rect x="282.0" y="387.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="285.0" y="398.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="282.0" y="371.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="285.0" y="382.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.37%)</title><rect x="282.0" y="355.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="285.0" y="366.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab_event(KlassHandle, unsigned long, unsigned long) (1 samples, 0.37%)</title><rect x="282.0" y="339.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="285.0" y="350.0"></text>
</g>
<g>
<title>JfrBackend::is_event_enabled(TraceEventId) (1 samples, 0.37%)</title><rect x="282.0" y="323.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="285.0" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.&lt;init&gt; (1 samples, 0.37%)</title><rect x="286.4" y="403.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.4" y="414.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.37%)</title><rect x="286.4" y="387.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.4" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.constructParser (6 samples, 2.23%)</title><rect x="290.7" y="403.0" width="26.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.7" y="414.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory$Feature.enabledIn (1 samples, 0.37%)</title><rect x="290.7" y="387.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.7" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.detectEncoding (1 samples, 0.37%)</title><rect x="295.1" y="387.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.1" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.&lt;init&gt; (2 samples, 0.74%)</title><rect x="299.5" y="387.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.5" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.&lt;init&gt; (2 samples, 0.74%)</title><rect x="299.5" y="371.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.5" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonParser$Feature.enabledIn (1 samples, 0.37%)</title><rect x="299.5" y="355.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.5" y="366.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.37%)</title><rect x="299.5" y="339.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="302.5" y="350.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.37%)</title><rect x="299.5" y="323.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="302.5" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.37%)</title><rect x="299.5" y="307.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="302.5" y="318.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.37%)</title><rect x="299.5" y="291.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="302.5" y="302.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long, unsigned char, unsigned int*, unsigned int*) (1 samples, 0.37%)</title><rect x="299.5" y="275.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="302.5" y="286.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.37%)</title><rect x="299.5" y="259.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="302.5" y="270.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.37%)</title><rect x="299.5" y="243.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="302.5" y="254.0"></text>
</g>
<g>
<title>SurvRateGroup::next_age_index() (1 samples, 0.37%)</title><rect x="299.5" y="227.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="302.5" y="238.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.constructTextBuffer (1 samples, 0.37%)</title><rect x="303.9" y="355.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.9" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.makeChild (2 samples, 0.74%)</title><rect x="308.3" y="387.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.3" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._readMapAndClose (22 samples, 8.18%)</title><rect x="317.1" y="435.0" width="96.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="320.1" y="446.0">com/fasterx..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._findRootDeserializer (8 samples, 2.97%)</title><rect x="317.1" y="419.0" width="35.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.1" y="430.0">com..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (8 samples, 2.97%)</title><rect x="317.1" y="403.0" width="35.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.1" y="414.0">jav..</text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.74%)</title><rect x="343.4" y="387.0" width="8.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="346.4" y="398.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.74%)</title><rect x="343.4" y="371.0" width="8.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="346.4" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._initForReading (5 samples, 1.86%)</title><rect x="352.2" y="419.0" width="21.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.2" y="430.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (4 samples, 1.49%)</title><rect x="352.2" y="403.0" width="17.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.2" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject (4 samples, 1.49%)</title><rect x="352.2" y="387.0" width="17.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.2" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.createChildObjectContext (3 samples, 1.12%)</title><rect x="356.5" y="371.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.5" y="382.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.37%)</title><rect x="356.5" y="355.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="359.5" y="366.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="356.5" y="339.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="359.5" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.&lt;init&gt; (2 samples, 0.74%)</title><rect x="360.9" y="355.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.9" y="366.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.process (1 samples, 0.37%)</title><rect x="369.7" y="403.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.7" y="414.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.loggingContext (1 samples, 0.37%)</title><rect x="369.7" y="387.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.7" y="398.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/AbstractDecatonProperties.get (1 samples, 0.37%)</title><rect x="369.7" y="371.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.7" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.37%)</title><rect x="369.7" y="355.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.7" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.37%)</title><rect x="369.7" y="339.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.7" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.37%)</title><rect x="369.7" y="323.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.7" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.&lt;init&gt; (1 samples, 0.37%)</title><rect x="369.7" y="307.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="372.7" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.createDeserializationContext (2 samples, 0.74%)</title><rect x="374.1" y="419.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.1" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/DefaultDeserializationContext$Impl.createInstance (2 samples, 0.74%)</title><rect x="374.1" y="403.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.1" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.74%)</title><rect x="374.1" y="387.0" width="8.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="377.1" y="398.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="374.1" y="371.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="377.1" y="382.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.37%)</title><rect x="378.5" y="371.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="381.5" y="382.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="378.5" y="355.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="381.5" y="366.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.37%)</title><rect x="378.5" y="339.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="381.5" y="350.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.37%)</title><rect x="378.5" y="323.0" width="4.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="381.5" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/DefaultDeserializationContext.readRootValue (7 samples, 2.60%)</title><rect x="382.9" y="419.0" width="30.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.9" y="430.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserialize (7 samples, 2.60%)</title><rect x="382.9" y="403.0" width="30.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="385.9" y="414.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (2 samples, 0.74%)</title><rect x="382.9" y="387.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.9" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (1 samples, 0.37%)</title><rect x="382.9" y="371.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.9" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (1 samples, 0.37%)</title><rect x="382.9" y="355.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.9" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (1 samples, 0.37%)</title><rect x="382.9" y="339.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.9" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWSOrEnd (1 samples, 0.37%)</title><rect x="387.2" y="371.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.2" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserializeFromObject (5 samples, 1.86%)</title><rect x="391.6" y="387.0" width="22.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.6" y="398.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerBase.deserializeFromObjectUsingNonDefault (5 samples, 1.86%)</title><rect x="391.6" y="371.0" width="22.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="394.6" y="382.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeUsingPropertyBased (5 samples, 1.86%)</title><rect x="391.6" y="355.0" width="22.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="394.6" y="366.0">c..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeWithErrorWrapping (1 samples, 0.37%)</title><rect x="404.8" y="339.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.8" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/SettableBeanProperty.deserialize (1 samples, 0.37%)</title><rect x="404.8" y="323.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.8" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (1 samples, 0.37%)</title><rect x="404.8" y="307.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.8" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (1 samples, 0.37%)</title><rect x="404.8" y="291.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="407.8" y="302.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.37%)</title><rect x="404.8" y="275.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.8" y="286.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.findCreatorProperty (1 samples, 0.37%)</title><rect x="409.2" y="339.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="412.2" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.37%)</title><rect x="409.2" y="323.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.2" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.37%)</title><rect x="409.2" y="307.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.2" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (2 samples, 0.74%)</title><rect x="413.6" y="435.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="416.6" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (2 samples, 0.74%)</title><rect x="413.6" y="419.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.6" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (2 samples, 0.74%)</title><rect x="413.6" y="403.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.6" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/LRUMap.get (2 samples, 0.74%)</title><rect x="413.6" y="387.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.74%)</title><rect x="413.6" y="371.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.6" y="382.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.process (135 samples, 50.19%)</title><rect x="422.3" y="531.0" width="592.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.3" y="542.0">com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.process</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.37%)</title><rect x="444.3" y="515.0" width="4.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="447.3" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/LoggingContext.close (23 samples, 8.55%)</title><rect x="448.7" y="515.0" width="100.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.7" y="526.0">com/linecorp..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.pushDownStream (1 samples, 0.37%)</title><rect x="457.4" y="499.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.4" y="510.0"></text>
</g>
<g>
<title>org/slf4j/MDC.remove (20 samples, 7.43%)</title><rect x="461.8" y="499.0" width="87.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.8" y="510.0">org/slf4j/..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.remove (19 samples, 7.06%)</title><rect x="466.2" y="483.0" width="83.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.2" y="494.0">ch/qos/lo..</text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.remove (18 samples, 6.69%)</title><rect x="470.6" y="467.0" width="79.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.6" y="478.0">java/util..</text>
</g>
<g>
<title>java/util/HashMap.remove (8 samples, 2.97%)</title><rect x="514.5" y="451.0" width="35.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.5" y="462.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.removeNode (8 samples, 2.97%)</title><rect x="514.5" y="435.0" width="35.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.5" y="446.0">jav..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.&lt;init&gt; (1 samples, 0.37%)</title><rect x="549.6" y="515.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.6" y="526.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.37%)</title><rect x="549.6" y="499.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.6" y="510.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.loggingContext (28 samples, 10.41%)</title><rect x="553.9" y="515.0" width="122.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.9" y="526.0">com/linecorp/de..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.37%)</title><rect x="553.9" y="499.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="556.9" y="510.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.37%)</title><rect x="553.9" y="483.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="556.9" y="494.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="553.9" y="467.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="556.9" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.37%)</title><rect x="553.9" y="451.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="556.9" y="462.0"></text>
</g>
<g>
<title>__memset_sse2 (1 samples, 0.37%)</title><rect x="553.9" y="435.0" width="4.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="556.9" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/LoggingContext.&lt;init&gt; (25 samples, 9.29%)</title><rect x="558.3" y="499.0" width="109.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.3" y="510.0">com/linecorp/..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/TaskMetadata.toString (9 samples, 3.35%)</title><rect x="562.7" y="483.0" width="39.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.7" y="494.0">com..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 2.23%)</title><rect x="575.9" y="467.0" width="26.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.9" y="478.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 2.23%)</title><rect x="575.9" y="451.0" width="26.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.9" y="462.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 1.86%)</title><rect x="575.9" y="435.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.9" y="446.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.expandCapacity (5 samples, 1.86%)</title><rect x="575.9" y="419.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.9" y="430.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 1.86%)</title><rect x="575.9" y="403.0" width="21.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.9" y="414.0">j..</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 1.86%)</title><rect x="575.9" y="387.0" width="21.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="578.9" y="398.0">O..</text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.37%)</title><rect x="575.9" y="371.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="578.9" y="382.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.37%)</title><rect x="575.9" y="355.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="578.9" y="366.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.37%)</title><rect x="575.9" y="339.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="578.9" y="350.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.37%)</title><rect x="580.3" y="371.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="583.3" y="382.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 1.12%)</title><rect x="584.6" y="371.0" width="13.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="587.6" y="382.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab_event(KlassHandle, unsigned long, unsigned long) (1 samples, 0.37%)</title><rect x="584.6" y="355.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="587.6" y="366.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (2 samples, 0.74%)</title><rect x="589.0" y="355.0" width="8.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="592.0" y="366.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.37%)</title><rect x="589.0" y="339.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="592.0" y="350.0"></text>
</g>
<g>
<title>G1OffsetTableContigSpace::free() const (1 samples, 0.37%)</title><rect x="593.4" y="339.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="596.4" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.37%)</title><rect x="597.8" y="435.0" width="4.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="600.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.37%)</title><rect x="602.2" y="483.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.2" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.37%)</title><rect x="602.2" y="467.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.37%)</title><rect x="602.2" y="451.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.2" y="462.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (14 samples, 5.20%)</title><rect x="606.6" y="483.0" width="61.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.6" y="494.0">org/sl..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (14 samples, 5.20%)</title><rect x="606.6" y="467.0" width="61.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.6" y="478.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (1 samples, 0.37%)</title><rect x="606.6" y="451.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="609.6" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.37%)</title><rect x="606.6" y="435.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.6" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.37%)</title><rect x="606.6" y="419.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.6" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.37%)</title><rect x="606.6" y="403.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.6" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.put (13 samples, 4.83%)</title><rect x="611.0" y="451.0" width="57.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.0" y="462.0">java/u..</text>
</g>
<g>
<title>java/util/HashMap.put (12 samples, 4.46%)</title><rect x="615.4" y="435.0" width="52.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.4" y="446.0">java/..</text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 2.60%)</title><rect x="637.3" y="419.0" width="30.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.3" y="430.0">ja..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/AbstractDecatonProperties.get (2 samples, 0.74%)</title><rect x="668.0" y="499.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.0" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.74%)</title><rect x="668.0" y="483.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.74%)</title><rect x="668.0" y="467.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.0" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.74%)</title><rect x="668.0" y="451.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.0" y="462.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.37%)</title><rect x="668.0" y="435.0" width="4.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="671.0" y="446.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.37%)</title><rect x="668.0" y="419.0" width="4.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="671.0" y="430.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.&lt;init&gt; (1 samples, 0.37%)</title><rect x="672.4" y="435.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.4" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.push (72 samples, 26.77%)</title><rect x="676.8" y="515.0" width="315.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.8" y="526.0">com/linecorp/decaton/processor/runtime/inte..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.pushDownStream (72 samples, 26.77%)</title><rect x="676.8" y="499.0" width="315.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.8" y="510.0">com/linecorp/decaton/processor/runtime/inte..</text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.37%)</title><rect x="685.5" y="483.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="688.5" y="494.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.37%)</title><rect x="685.5" y="467.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="688.5" y="478.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.37%)</title><rect x="685.5" y="451.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="688.5" y="462.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.37%)</title><rect x="685.5" y="435.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="688.5" y="446.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.37%)</title><rect x="685.5" y="419.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="688.5" y="430.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(methodHandle&amp;, KlassHandle&amp;, Bytecodes::Code, constantPoolHandle, int, Thread*) (1 samples, 0.37%)</title><rect x="685.5" y="403.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="688.5" y="414.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.37%)</title><rect x="685.5" y="387.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="688.5" y="398.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.37%)</title><rect x="685.5" y="371.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="688.5" y="382.0"></text>
</g>
<g>
<title>SystemDictionary::add_loader_constraint(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="685.5" y="355.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="688.5" y="366.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*, ClassLoaderData*) (1 samples, 0.37%)</title><rect x="685.5" y="339.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="688.5" y="350.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$210/983517944.process (55 samples, 20.45%)</title><rect x="689.9" y="483.0" width="241.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.9" y="494.0">com/linecorp/decaton/benchmark/D..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$null$14 (54 samples, 20.07%)</title><rect x="689.9" y="467.0" width="236.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.9" y="478.0">com/linecorp/decaton/benchmark/..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording.process (53 samples, 19.70%)</title><rect x="694.3" y="451.0" width="232.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.3" y="462.0">com/linecorp/decaton/benchmark/..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording$ChildRecording.process (52 samples, 19.33%)</title><rect x="694.3" y="435.0" width="228.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.3" y="446.0">com/linecorp/decaton/benchmark..</text>
</g>
<g>
<title>java/lang/Thread.sleep (50 samples, 18.59%)</title><rect x="694.3" y="419.0" width="219.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.3" y="430.0">java/lang/Thread.sleep</text>
</g>
<g>
<title>JVM_Sleep (42 samples, 15.61%)</title><rect x="720.6" y="403.0" width="184.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="723.6" y="414.0">JVM_Sleep</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (2 samples, 0.74%)</title><rect x="738.2" y="387.0" width="8.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="741.2" y="398.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.37%)</title><rect x="747.0" y="387.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="750.0" y="398.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 1.12%)</title><rect x="751.3" y="387.0" width="13.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="754.3" y="398.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 1.12%)</title><rect x="751.3" y="371.0" width="13.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="754.3" y="382.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.37%)</title><rect x="764.5" y="387.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="767.5" y="398.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (31 samples, 11.52%)</title><rect x="768.9" y="387.0" width="136.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="771.9" y="398.0">os::sleep(Thread*..</text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.37%)</title><rect x="808.4" y="371.0" width="4.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="811.4" y="382.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (14 samples, 5.20%)</title><rect x="812.8" y="371.0" width="61.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="815.8" y="382.0">__pthr..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.37%)</title><rect x="874.2" y="371.0" width="4.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="877.2" y="382.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.37%)</title><rect x="878.6" y="371.0" width="4.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="881.6" y="382.0"></text>
</g>
<g>
<title>_init (3 samples, 1.12%)</title><rect x="882.9" y="371.0" width="13.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="885.9" y="382.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.37%)</title><rect x="896.1" y="371.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="899.1" y="382.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.37%)</title><rect x="900.5" y="371.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="903.5" y="382.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.37%)</title><rect x="904.9" y="403.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="907.9" y="414.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.37%)</title><rect x="909.3" y="403.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="912.3" y="414.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.74%)</title><rect x="913.6" y="419.0" width="8.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="916.6" y="430.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.74%)</title><rect x="913.6" y="403.0" width="8.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="916.6" y="414.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.37%)</title><rect x="922.4" y="435.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.4" y="446.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.37%)</title><rect x="922.4" y="419.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="925.4" y="430.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.37%)</title><rect x="922.4" y="403.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="925.4" y="414.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="922.4" y="387.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="925.4" y="398.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.37%)</title><rect x="922.4" y="371.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="925.4" y="382.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.37%)</title><rect x="922.4" y="355.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="925.4" y="366.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.&lt;init&gt; (1 samples, 0.37%)</title><rect x="926.8" y="467.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.8" y="478.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/DecatonTask.&lt;init&gt; (4 samples, 1.49%)</title><rect x="931.2" y="483.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 1.12%)</title><rect x="935.6" y="467.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="938.6" y="478.0"></text>
</g>
<g>
<title>g1_post_barrier_slow Runtime1 stub (1 samples, 0.37%)</title><rect x="948.7" y="483.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="951.7" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.isEmpty (1 samples, 0.37%)</title><rect x="953.1" y="483.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="956.1" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.isEmpty (1 samples, 0.37%)</title><rect x="953.1" y="467.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="956.1" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (1 samples, 0.37%)</title><rect x="957.5" y="483.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (1 samples, 0.37%)</title><rect x="957.5" y="467.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.5" y="478.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.37%)</title><rect x="957.5" y="451.0" width="4.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="960.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 2.23%)</title><rect x="961.9" y="483.0" width="26.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.9" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 1.86%)</title><rect x="966.3" y="467.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.3" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 1.86%)</title><rect x="966.3" y="451.0" width="21.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="969.3" y="462.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 1.86%)</title><rect x="966.3" y="435.0" width="21.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.3" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 1.86%)</title><rect x="966.3" y="419.0" width="21.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.3" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 1.86%)</title><rect x="966.3" y="403.0" width="21.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.3" y="414.0">j..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl$$Lambda$296/1492117791.accept (2 samples, 0.74%)</title><rect x="970.7" y="387.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.7" y="398.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.74%)</title><rect x="979.4" y="387.0" width="8.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="982.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.get (1 samples, 0.37%)</title><rect x="988.2" y="483.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.2" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/Utils$Timer.duration (1 samples, 0.37%)</title><rect x="992.6" y="515.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.6" y="526.0"></text>
</g>
<g>
<title>java/time/Duration.ofNanos (1 samples, 0.37%)</title><rect x="992.6" y="499.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="995.6" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.create (1 samples, 0.37%)</title><rect x="992.6" y="483.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="995.6" y="494.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.37%)</title><rect x="992.6" y="467.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="995.6" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.37%)</title><rect x="992.6" y="451.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="995.6" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.37%)</title><rect x="992.6" y="435.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="995.6" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.37%)</title><rect x="992.6" y="419.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="995.6" y="430.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.37%)</title><rect x="992.6" y="403.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="995.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 1.12%)</title><rect x="997.0" y="515.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 1.12%)</title><rect x="997.0" y="499.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 1.12%)</title><rect x="997.0" y="483.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 1.12%)</title><rect x="997.0" y="467.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1000.0" y="478.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline$$Lambda$301/125218963.accept (3 samples, 1.12%)</title><rect x="997.0" y="451.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.0" y="462.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.lambda$process$57 (3 samples, 1.12%)</title><rect x="997.0" y="435.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.0" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/Utils$Timer.duration (3 samples, 1.12%)</title><rect x="997.0" y="419.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.0" y="430.0"></text>
</g>
<g>
<title>java/time/Duration.ofNanos (3 samples, 1.12%)</title><rect x="997.0" y="403.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1000.0" y="414.0"></text>
</g>
<g>
<title>java/time/Duration.create (3 samples, 1.12%)</title><rect x="997.0" y="387.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.0" y="398.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 1.12%)</title><rect x="997.0" y="371.0" width="13.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1000.0" y="382.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 1.12%)</title><rect x="997.0" y="355.0" width="13.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1000.0" y="366.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.37%)</title><rect x="1010.1" y="515.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1013.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.37%)</title><rect x="1014.5" y="595.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.37%)</title><rect x="1014.5" y="579.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1017.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.37%)</title><rect x="1014.5" y="563.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.37%)</title><rect x="1014.5" y="547.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 4.09%)</title><rect x="1018.9" y="595.0" width="48.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.9" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (10 samples, 3.72%)</title><rect x="1023.3" y="579.0" width="43.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1026.3" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.74%)</title><rect x="1023.3" y="563.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.74%)</title><rect x="1023.3" y="547.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1026.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.74%)</title><rect x="1023.3" y="531.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.74%)</title><rect x="1023.3" y="515.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1026.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.74%)</title><rect x="1023.3" y="499.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1026.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 2.97%)</title><rect x="1032.1" y="563.0" width="35.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.1" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 2.97%)</title><rect x="1032.1" y="547.0" width="35.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.1" y="558.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 2.97%)</title><rect x="1032.1" y="531.0" width="35.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.1" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 2.97%)</title><rect x="1032.1" y="515.0" width="35.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.1" y="526.0">jav..</text>
</g>
<g>
<title>start_thread (28 samples, 10.41%)</title><rect x="1067.2" y="643.0" width="122.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1070.2" y="654.0">start_thread</text>
</g>
<g>
<title>java_start(Thread*) (28 samples, 10.41%)</title><rect x="1067.2" y="627.0" width="122.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1070.2" y="638.0">java_start(Thre..</text>
</g>
<g>
<title>GangWorker::loop() (12 samples, 4.46%)</title><rect x="1067.2" y="611.0" width="52.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1070.2" y="622.0">GangW..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (12 samples, 4.46%)</title><rect x="1067.2" y="595.0" width="52.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1070.2" y="606.0">G1Par..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 2.23%)</title><rect x="1067.2" y="579.0" width="26.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1070.2" y="590.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (6 samples, 2.23%)</title><rect x="1067.2" y="563.0" width="26.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1070.2" y="574.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.74%)</title><rect x="1084.7" y="547.0" width="8.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1087.7" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::oop_oop_iterate_backwards_nv(oopDesc*, G1ParScanClosure*) (2 samples, 0.74%)</title><rect x="1084.7" y="531.0" width="8.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1087.7" y="542.0"></text>
</g>
<g>
<title>G1RootProcessor::scan_remembered_sets(G1ParPushHeapRSClosure*, OopClosure*, unsigned int) (6 samples, 2.23%)</title><rect x="1093.5" y="579.0" width="26.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1096.5" y="590.0">G..</text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParPushHeapRSClosure*, CodeBlobClosure*, unsigned int) (6 samples, 2.23%)</title><rect x="1093.5" y="563.0" width="26.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1096.5" y="574.0">G..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, DirtyCardQueue*, bool, unsigned int) (6 samples, 2.23%)</title><rect x="1093.5" y="547.0" width="26.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1096.5" y="558.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, int, bool) (6 samples, 2.23%)</title><rect x="1093.5" y="531.0" width="26.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1096.5" y="542.0">D..</text>
</g>
<g>
<title>RefineRecordRefsIntoCSCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (6 samples, 2.23%)</title><rect x="1093.5" y="515.0" width="26.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1096.5" y="526.0">R..</text>
</g>
<g>
<title>G1RemSet::refine_card(signed char*, unsigned int, bool) (6 samples, 2.23%)</title><rect x="1093.5" y="499.0" width="26.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1096.5" y="510.0">G..</text>
</g>
<g>
<title>HeapRegion::oops_on_card_seq_iterate_careful(MemRegion, FilterOutOfRegionClosure*, bool, signed char*) (5 samples, 1.86%)</title><rect x="1097.9" y="483.0" width="21.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.9" y="494.0">H..</text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.37%)</title><rect x="1102.3" y="467.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1105.3" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (1 samples, 0.37%)</title><rect x="1102.3" y="451.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1105.3" y="462.0"></text>
</g>
<g>
<title>ObjArrayKlass::oop_oop_iterate_nv_m(oopDesc*, FilterOutOfRegionClosure*, MemRegion) (3 samples, 1.12%)</title><rect x="1106.7" y="467.0" width="13.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1109.7" y="478.0"></text>
</g>
<g>
<title>G1UpdateRSOrPushRefOopClosure::do_oop(unsigned int*) (3 samples, 1.12%)</title><rect x="1106.7" y="451.0" width="13.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1109.7" y="462.0"></text>
</g>
<g>
<title>JavaThread::run() (15 samples, 5.58%)</title><rect x="1119.8" y="611.0" width="65.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1122.8" y="622.0">JavaThr..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (15 samples, 5.58%)</title><rect x="1119.8" y="595.0" width="65.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1122.8" y="606.0">JavaThr..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 5.58%)</title><rect x="1119.8" y="579.0" width="65.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1122.8" y="590.0">Compile..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (14 samples, 5.20%)</title><rect x="1119.8" y="563.0" width="61.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1122.8" y="574.0">Compil..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (12 samples, 4.46%)</title><rect x="1119.8" y="547.0" width="52.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1122.8" y="558.0">C2Com..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (12 samples, 4.46%)</title><rect x="1119.8" y="531.0" width="52.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1122.8" y="542.0">Compi..</text>
</g>
<g>
<title>Compile::Code_Gen() (7 samples, 2.60%)</title><rect x="1119.8" y="515.0" width="30.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1122.8" y="526.0">Co..</text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.37%)</title><rect x="1119.8" y="499.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.8" y="510.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.37%)</title><rect x="1119.8" y="483.0" width="4.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1122.8" y="494.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.37%)</title><rect x="1124.2" y="499.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1127.2" y="510.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.37%)</title><rect x="1124.2" y="483.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.2" y="494.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;) (1 samples, 0.37%)</title><rect x="1124.2" y="467.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1127.2" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (5 samples, 1.86%)</title><rect x="1128.6" y="499.0" width="21.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1131.6" y="510.0">P..</text>
</g>
<g>
<title>MachNode::bottom_type() const (1 samples, 0.37%)</title><rect x="1128.6" y="483.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.6" y="494.0"></text>
</g>
<g>
<title>MachNode::two_adr() const (1 samples, 0.37%)</title><rect x="1133.0" y="483.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.0" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.37%)</title><rect x="1137.4" y="483.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.4" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.74%)</title><rect x="1141.7" y="483.0" width="8.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.7" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.37%)</title><rect x="1146.1" y="467.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.1" y="478.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 1.49%)</title><rect x="1150.5" y="515.0" width="17.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.5" y="526.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.37%)</title><rect x="1150.5" y="499.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.5" y="510.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.37%)</title><rect x="1150.5" y="483.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.5" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;) (1 samples, 0.37%)</title><rect x="1150.5" y="467.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.5" y="478.0"></text>
</g>
<g>
<title>TypeInstPtr::cast_to_instance_id(int) const (1 samples, 0.37%)</title><rect x="1150.5" y="451.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.5" y="462.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.37%)</title><rect x="1150.5" y="435.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.5" y="446.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (2 samples, 0.74%)</title><rect x="1154.9" y="499.0" width="8.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.9" y="510.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.37%)</title><rect x="1154.9" y="483.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.9" y="494.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.37%)</title><rect x="1159.3" y="483.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.3" y="494.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.37%)</title><rect x="1163.7" y="499.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.7" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="1168.1" y="515.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.1" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="1168.1" y="499.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="1168.1" y="483.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.1" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="1168.1" y="467.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="1168.1" y="451.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="1168.1" y="435.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.1" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="1168.1" y="419.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.1" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="1168.1" y="403.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="1168.1" y="387.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="1168.1" y="371.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="1168.1" y="355.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="1168.1" y="339.0" width="4.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.1" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.37%)</title><rect x="1168.1" y="323.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.1" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.37%)</title><rect x="1168.1" y="307.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.37%)</title><rect x="1168.1" y="291.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.37%)</title><rect x="1168.1" y="275.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.1" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.37%)</title><rect x="1168.1" y="259.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.1" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.37%)</title><rect x="1168.1" y="243.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.1" y="254.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.37%)</title><rect x="1168.1" y="227.0" width="4.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.1" y="238.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_call(JVMState*, ciMethod*, ciMethod*, bool) (1 samples, 0.37%)</title><rect x="1168.1" y="211.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.1" y="222.0"></text>
</g>
<g>
<title>CallGenerator::for_method_handle_inline(JVMState*, ciMethod*, ciMethod*, bool&amp;) (1 samples, 0.37%)</title><rect x="1168.1" y="195.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.1" y="206.0"></text>
</g>
<g>
<title>ciMemberName::get_vmtarget() const (1 samples, 0.37%)</title><rect x="1168.1" y="179.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.1" y="190.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.37%)</title><rect x="1168.1" y="163.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.1" y="174.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.37%)</title><rect x="1168.1" y="147.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.1" y="158.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="1168.1" y="131.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.1" y="142.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.37%)</title><rect x="1168.1" y="115.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.1" y="126.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle, ciSymbol*, bool) (1 samples, 0.37%)</title><rect x="1168.1" y="99.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.1" y="110.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.37%)</title><rect x="1168.1" y="83.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.1" y="94.0"></text>
</g>
<g>
<title>SystemDictionary::find_instance_or_array_klass(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="1168.1" y="67.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.1" y="78.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.37%)</title><rect x="1168.1" y="51.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.1" y="62.0"></text>
</g>
<g>
<title>Dictionary::find(int, unsigned int, Symbol*, ClassLoaderData*, Handle, Thread*) (1 samples, 0.37%)</title><rect x="1168.1" y="35.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.1" y="46.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (2 samples, 0.74%)</title><rect x="1172.5" y="547.0" width="8.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.5" y="558.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (2 samples, 0.74%)</title><rect x="1172.5" y="531.0" width="8.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.5" y="542.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.74%)</title><rect x="1172.5" y="515.0" width="8.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.5" y="526.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.37%)</title><rect x="1172.5" y="499.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.5" y="510.0"></text>
</g>
<g>
<title>Compilation::build_hir() (1 samples, 0.37%)</title><rect x="1172.5" y="483.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.5" y="494.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.37%)</title><rect x="1172.5" y="467.0" width="4.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.5" y="478.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.37%)</title><rect x="1172.5" y="451.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.5" y="462.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.37%)</title><rect x="1172.5" y="435.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.5" y="446.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.37%)</title><rect x="1172.5" y="419.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.5" y="430.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.37%)</title><rect x="1172.5" y="403.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.5" y="414.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1172.5" y="387.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.5" y="398.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.37%)</title><rect x="1172.5" y="371.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.5" y="382.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, Bytecodes::Code, Instruction*) (1 samples, 0.37%)</title><rect x="1172.5" y="355.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.5" y="366.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.37%)</title><rect x="1172.5" y="339.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.5" y="350.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.37%)</title><rect x="1172.5" y="323.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.5" y="334.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.37%)</title><rect x="1172.5" y="307.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.5" y="318.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.37%)</title><rect x="1172.5" y="291.0" width="4.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.5" y="302.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="1172.5" y="275.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.5" y="286.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="1172.5" y="259.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.5" y="270.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.37%)</title><rect x="1172.5" y="243.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.5" y="254.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.37%)</title><rect x="1172.5" y="227.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.5" y="238.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (1 samples, 0.37%)</title><rect x="1176.8" y="499.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.8" y="510.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.37%)</title><rect x="1176.8" y="483.0" width="4.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.8" y="494.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.37%)</title><rect x="1176.8" y="467.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.8" y="478.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.37%)</title><rect x="1176.8" y="451.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.8" y="462.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.37%)</title><rect x="1176.8" y="435.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.8" y="446.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.37%)</title><rect x="1181.2" y="563.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.2" y="574.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.37%)</title><rect x="1181.2" y="547.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.2" y="558.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.37%)</title><rect x="1181.2" y="531.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.2" y="542.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (1 samples, 0.37%)</title><rect x="1181.2" y="515.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.2" y="526.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (1 samples, 0.37%)</title><rect x="1181.2" y="499.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.2" y="510.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.37%)</title><rect x="1185.6" y="611.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.6" y="622.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.37%)</title><rect x="1185.6" y="595.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.6" y="606.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.37%)</title><rect x="1185.6" y="579.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.6" y="590.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.37%)</title><rect x="1185.6" y="563.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.6" y="574.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.37%)</title><rect x="1185.6" y="547.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.6" y="558.0"></text>
</g>
</g>
</svg>
